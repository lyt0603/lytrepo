steps:


  # 1. 도커 이미지 빌드
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'asia-northeast3-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/crypto-app:$SHORT_SHA', '.']

#  - name: 'gcr.io/cloud-builders/docker'
#    entrypoint: 'bash'
#    args: ['-c', 'echo user=$$lytuser && echo password=$$lytpassword']
#    secretEnv: ['lytuser', 'lytpassword']

  #Image Scan
  - name: 'gcr.io/cloud-builders/docker'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        docker run --rm \
        -v /var/run/docker.sock:/var/run/docker.sock \
        asia-northeast3-docker.pkg.dev/flash-physics-368407/twistlock2/twistlock:latest \
        images scan --address ${_PCC_CONSOLE_URL} \
        --user $$prismauser --password $$prismapassword \
        --details asia-northeast3-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/crypto-app:$SHORT_SHA
    secretEnv: ['prismauser', 'prismapassword'] 

  # 2. Artifact Registry에 푸시하는 단계
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'asia-northeast3-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/crypto-app:$SHORT_SHA' ]
            

  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'crypto-app-test'
      - '--image'
      - 'asia-northeast3-docker.pkg.dev/${PROJECT_ID}/${REPO_NAME}/crypto-app:$SHORT_SHA'
      - '--region'
      - 'asia-northeast3'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'

options:
  logging: CLOUD_LOGGING_ONLY

availableSecrets:
  secretManager:
    - versionName: projects/843668447202/secrets/prismauser/versions/latest
      env: 'prismauser'
    - versionName: projects/843668447202/secrets/prismapassword/versions/latest
      env: 'prismapassword'
